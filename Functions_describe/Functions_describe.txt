Описание функций
1) void setup()
Функция setup — это функция, которая вызывается один раз при запуске программы Arduino. Она используется для инициализации пинов, настройки последовательной связи и других нужных параметров. В наших кодах в функции setup осуществляется: 
Инициализация:
•	Последовательной передачи данных (Serial)
•	Объекта LCD (lcd.init()) и включение подсветки LCD (lcd.backlight()). Также инициализируются объекты для работы с датчиками DHT (dht.begin()) и газа MQ135 (gasSensor).
И настройка пинов: 
•	redPin, greenPin, bluePin как выводы (OUTPUT); 
•	leftTrigPin, leftEchoPin, rightTrigPin, rightEchoPin, resetButton, serveButton как входов (INPUT) или выходов (OUTPUT) с помощью функции pinMode.
2) void loop()
Функция loop - это функция, которая выполняется бесконечное количество раз после завершения функции setup. Она содержит основной код программы, который будет выполняться в цикле. 
В наших кодах функция loop используется:
•	Для чтения данных из последовательного порта (Serial) и управления яркостью трехцветного светодиода в зависимости от полученных команд.
Или функция loop используется для выполнения следующих этапов:
•	Вызывается функция readDistance для считывания расстояния, измеренного левым и правым датчиками и сохранения результатов в переменные leftDistance и rightDistance.
•	Считываются значения кнопок resetButton и serveButton с помощью функции digitalRead и сохраняются в переменные resetReading и serveReading.
•	Значения leftDistance, rightDistance, resetReading и serveReading отправляются через последовательную связь (Serial) на компьютер для дальнейшей обработки или отображения.
Также функция loop выполняет следующие действия:
•	Считывает значения влажности и температуры с датчика DHT (dht.readHumidity() и dht.readTemperature()).
•	Считывает значение концентрации газа (CO2) с датчика MQ135 (gasSensor.getPPM()).
•	Считывает значение датчика пламени (digitalRead(flameSensorPin)).
•	Считывает значение влажности почвы с аналогового пина (analogRead(A0)).
•	Выводит значения на LCD дисплей с использованием методов lcd.print() и lcd.setCursor().
•	Выводит значения на монитор последовательного порта с использованием функции Serial.print() и Serial.println().
•	Управляет насосом в зависимости от значения влажности почвы с помощью функции digitalWrite().

3) Serial.begin(9600)
Функция Serial.begin(9600) используется для инициализации последовательной связи с помощью порта UART (универсальный асинхронный приемопередатчик). В данном коде она используется для установки скорости передачи данных в 9600 бит/с.

4) pinMode
Функция pinMode используется для установки режимов пинов ввода/вывода. В данном коде она используется для установки пинов (redPin, greenPin, bluePin, leftTrigPin, leftEchoPin, rightTrigPin, rightEchoPin, resetButton, serveButton) в режим вывода (OUTPUT), чтобы светодиоды могли подключаться к этим пинам.

5) Serial.available()
Функция Serial.available() используется для определения количества доступных байтов данных для чтения из последовательного порта (Serial).

6) Serial.read()
Функция Serial.read() используется для считывания одного символа (байта) из последовательного порта (Serial). В данном коде она используется для чтения данных, отправленных через последовательный порт.

7) map
Функция map используется для преобразования значения от одного диапазона к другому. В данном коде она используется для преобразования значения входящего байта (inByte), который представляет символ от '0' до '9', в диапазон яркости от 0 до 255.

8) analogWrite
Функция analogWrite используется для установки аналогового сигнала (PWM) на указанном пине. В данном коде она используется для установки яркости светодиода, подключенного к текущему пину (currentPin), с помощью значения brightness.

9) digitalWrite
Функция digitalWrite используется для управления цифровым пином. Она принимает два параметра: pin - номер пина, к которому подключен светодиод, и value - значение, которое нужно установить на пине. В данном коде функция digitalWrite используется для управления каждым светодиодом (redPin, greenPin, bluePin), включая их с помощью передачи значения HIGH и выключая с помощью передачи значения LOW.
Еще функция используется для установки цифрового пина в высокое (HIGH) или низкое (LOW) состояние. В коде используется для управления насосом, подключенным к пину 3 (PUMP_PIN), путем установки пина в HIGH для включения насоса или в LOW для его выключения.

10) delay
Функция delay используется для остановки выполнения программы на заданное количество миллисекунд ms. Она принимает один параметр - значение времени задержки в миллисекундах. В данном коде функция delay используется для создания паузы в 1 секунду между включением и выключением каждого светодиода.

11) readDistance
Функция readDistance используется для измерения расстояния с помощью ультразвукового датчика. Она принимает два параметра: trigPin - номер пина для подключения триггера датчика, echoPin - номер пина для подключения эхо датчика. Функция выполняет следующие этапы:
1. Устанавливает пин триггера датчика в LOW (низкий уровень) на 2 микросекунды.
2. Устанавливает пин триггера датчика в HIGH (высокий уровень) на 10 микросекунд.
3. Устанавливает пин триггера датчика в LOW (низкий уровень).
4. Измеряет длительность импульса, приходящего с эхо датчика с помощью функции pulseIn.
5. Вычисляет расстояние на основе времени прохождения сигнала и сохраняет его в переменную distance.
6. Возвращает значение расстояния.

12) dht.readHumidity()
Эта функция из библиотеки DHT используется для считывания значения влажности из датчика DHT. Возвращает значение влажности воздуха в процентах.
13) dht.readTemperature()
Эта функция из библиотеки DHT используется для считывания значения температуры из датчика DHT. Возвращает значение температуры в градусах Цельсия.
14) gasSensor.getPPM()
Эта функция из библиотеки MQ135 используется для получения значения концентрации газа (CO2) с датчика MQ135. Возвращает значение концентрации газа в частях на миллион (ppm).
15) digitalRead(flameSensorPin)
Эта функция используется для чтения значения с цифрового пина. В нашем коде используется для чтения значения с пина, к которому подключен датчик пламени (flameSensorPin). Возвращает либо HIGH (1), если сигнал на пине высокий, либо LOW (0), если сигнал на пине низкий.
16) analogRead
Эта функция используется для чтения значения с аналогового пина. В коде используется для чтения значения влажности почвы с аналогового пина A0. Возвращает значение аналогового сигнала в диапазоне от 0 до 1023.
17) lcd.print
Эта функция из библиотеки LiquidCrystal_I2C используется для вывода текста на LCD-дисплей. В коде используется для вывода текста в указанное положение на дисплее.
18) lcd.setCursor()
Эта функция из библиотеки LiquidCrystal_I2C используется для установки позиции курсора на LCD-дисплее. В коде используется для установки позиции курсора перед выводом текста.
19) Serial.print()
Эта функция из библиотеки Wire используется для вывода данных в последовательный порт (Serial Monitor) на компьютере. В коде используется для вывода информации о значениях влажности, температуры и других параметров через последовательный порт.
20) Serial.println()
Эта функция из библиотеки Wire используется для вывода данных в последовательный порт (Serial Monitor) на компьютере с добавлением символа новой строки. В нашем коде используется для добавления символа новой строки после вывода информации.
